root = true

[*]
indent_style = space
indent_size = 4
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

[*.md]
trim_trailing_whitespace = false

[*.json]
indent_size = 2
trim_trailing_whitespace = false
insert_final_newline = false

[*.js]
indent_size = 2

[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = lf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:suggestion

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true

# Parameter preferences
dotnet_code_quality_unused_parameters = all

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental = true

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = unset
csharp_style_var_for_built_in_types = unset
csharp_style_var_when_type_is_apparent = unset

# Expression-bodied members
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = false
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_operators = false
csharp_style_expression_bodied_properties = true

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = when_multiline:suggestion
csharp_prefer_simple_using_statement = true

# Expression-level preferences
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_inlined_variable_declaration = true
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_prefer_index_operator = false # do not enforce use of simplified range operator
csharp_style_prefer_range_operator = false # do not enforce use of simplified range operator
csharp_style_throw_expression = true
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.custom_rule_interface.severity = warning
dotnet_naming_rule.custom_rule_interface.symbols = custom_symbols_interface
dotnet_naming_rule.custom_rule_interface.style = custom_style_begins_with_i

dotnet_naming_rule.custom_rule_types.severity = warning
dotnet_naming_rule.custom_rule_types.symbols = custom_symbols_types
dotnet_naming_rule.custom_rule_types.style = custom_style_pascal_case

dotnet_naming_rule.custom_rule_non_field_members.severity = warning
dotnet_naming_rule.custom_rule_non_field_members.symbols = custom_symbols_non_field_members
dotnet_naming_rule.custom_rule_non_field_members.style = custom_style_pascal_case

dotnet_naming_rule.custom_rule_private_members.severity = warning
dotnet_naming_rule.custom_rule_private_members.symbols = custom_symbols_private_members
dotnet_naming_rule.custom_rule_private_members.style = custom_style_underscore_pascal_case

dotnet_naming_rule.custom_rule_public_instance_fields.severity = warning
dotnet_naming_rule.custom_rule_public_instance_fields.symbols = custom_symbols_public_instance_fields
dotnet_naming_rule.custom_rule_public_instance_fields.style = custom_style_pascal_case

dotnet_naming_rule.custom_rule_locals_and_parameters.severity = warning
dotnet_naming_rule.custom_rule_locals_and_parameters.symbols = custom_symbols_locals_and_parameters
dotnet_naming_rule.custom_rule_locals_and_parameters.style = custom_style_camel_case

dotnet_naming_rule.custom_rule_constant_fields.severity = warning
dotnet_naming_rule.custom_rule_constant_fields.symbols = custom_symbols_constant_fields
dotnet_naming_rule.custom_rule_constant_fields.style = custom_style_underscore_all_upper

# Symbol specifications

dotnet_naming_symbols.custom_symbols_interface.applicable_kinds = interface
dotnet_naming_symbols.custom_symbols_interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.custom_symbols_interface.required_modifiers =

dotnet_naming_symbols.custom_symbols_types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.custom_symbols_types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.custom_symbols_types.required_modifiers =

dotnet_naming_symbols.custom_symbols_non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.custom_symbols_non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.custom_symbols_non_field_members.required_modifiers =

dotnet_naming_symbols.custom_symbols_private_members.applicable_kinds = property, field, event
dotnet_naming_symbols.custom_symbols_private_members.applicable_accessibilities = internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.custom_symbols_private_members.required_modifiers =

dotnet_naming_symbols.custom_symbols_public_instance_fields.applicable_kinds = field
dotnet_naming_symbols.custom_symbols_public_instance_fields.applicable_accessibilities = public
dotnet_naming_symbols.custom_symbols_public_instance_fields.required_modifiers =

dotnet_naming_symbols.custom_symbols_locals_and_parameters.applicable_kinds = parameter, local
dotnet_naming_symbols.custom_symbols_locals_and_parameters.applicable_accessibilities = *
dotnet_naming_symbols.custom_symbols_locals_and_parameters.required_modifiers =

dotnet_naming_symbols.custom_symbols_constant_fields.applicable_kinds = field
dotnet_naming_symbols.custom_symbols_constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.custom_symbols_constant_fields.required_modifiers = const

# Naming styles

dotnet_naming_style.custom_style_begins_with_i.required_prefix = I
dotnet_naming_style.custom_style_begins_with_i.required_suffix =
dotnet_naming_style.custom_style_begins_with_i.word_separator =
dotnet_naming_style.custom_style_begins_with_i.capitalization = pascal_case

dotnet_naming_style.custom_style_pascal_case.required_prefix =
dotnet_naming_style.custom_style_pascal_case.required_suffix =
dotnet_naming_style.custom_style_pascal_case.word_separator =
dotnet_naming_style.custom_style_pascal_case.capitalization = pascal_case

dotnet_naming_style.custom_style_underscore_pascal_case.required_prefix = _
dotnet_naming_style.custom_style_underscore_pascal_case.required_suffix =
dotnet_naming_style.custom_style_underscore_pascal_case.word_separator =
dotnet_naming_style.custom_style_underscore_pascal_case.capitalization = pascal_case

dotnet_naming_style.custom_style_camel_case.required_prefix =
dotnet_naming_style.custom_style_camel_case.required_suffix =
dotnet_naming_style.custom_style_camel_case.word_separator =
dotnet_naming_style.custom_style_camel_case.capitalization = camel_case

dotnet_naming_style.custom_style_underscore_all_upper.required_prefix = _
dotnet_naming_style.custom_style_underscore_all_upper.required_suffix =
dotnet_naming_style.custom_style_underscore_all_upper.word_separator = _
dotnet_naming_style.custom_style_underscore_all_upper.capitalization = all_upper

#### Analyzer Exclusions ####

# source code of packages does not follow the code style of FLOS so
# for all *.cs files in this folder...
[FLOS/Library/PackageCache/**.cs]

# ...disable all analyzer output
dotnet_analyzer_diagnostic.severity = none

# source code of authentication services mostly came from Persist Online and it does not
# follow the code style of FLOS and there are no rules to enforce that code style so
# for all *.cs files in this folder...
[AuthServer/**.cs]

# ...disable all analyzer output
dotnet_analyzer_diagnostic.severity = none
# (ignoring everything is not great but creating a better solution would cost
# time which we currently do not have)

# for all *.cs files everywhere
[*.cs]

# disable IDE0270 "Null check can be simplified." because simplifying it using coalesce expression
# will cause UNT0007 "Unity objects should not use null coalescing." which seems to be even worse
dotnet_diagnostic.IDE0270.severity = none

# disable IDE0251 "???" because as of June 2023 it neither works correctly nor has an error text
# https://jira.cipsoft.de/browse/FLOS-192
# https://github.com/dotnet/roslyn/issues/67949
# https://github.com/dotnet/roslyn/issues/67949#issuecomment-1584226382
dotnet_diagnostic.IDE0251.severity = none
